accessWidener v2 named

accessible method net/minecraft/entity/ai/brain/sensor/SensorType <init> (Ljava/util/function/Supplier;)V

accessible method net/minecraft/entity/ai/brain/Activity <init> (Ljava/lang/String;)V
accessible method net/minecraft/particle/SimpleParticleType <init> (Z)V
accessible method net/minecraft/entity/ai/pathing/Path setDebugInfo ([Lnet/minecraft/entity/ai/pathing/PathNode;[Lnet/minecraft/entity/ai/pathing/PathNode;Ljava/util/Set;)V

# The following fields are from SBL
# Brain
accessible field net/minecraft/entity/ai/brain/Brain sensors Ljava/util/Map;
accessible method net/minecraft/entity/ai/brain/Brain streamMemories ()Ljava/util/stream/Stream;
accessible field net/minecraft/entity/ai/brain/Brain memories Ljava/util/Map;
accessible field net/minecraft/entity/ai/brain/Brain requiredActivityMemories Ljava/util/Map;
accessible field net/minecraft/entity/ai/brain/Brain forgettingActivityMemories Ljava/util/Map;
accessible field net/minecraft/entity/ai/brain/Brain tasks Ljava/util/Map;
accessible field net/minecraft/entity/ai/brain/task/MultiTickTask requiredMemoryStates Ljava/util/Map;
accessible class net/minecraft/entity/ai/brain/Brain$Profile
extendable class net/minecraft/entity/ai/brain/Brain$Profile
accessible method net/minecraft/entity/ai/brain/Brain$Profile <init> (Ljava/util/Collection;Ljava/util/Collection;)V
accessible method net/minecraft/entity/ai/brain/Brain setMemory (Lnet/minecraft/entity/ai/brain/MemoryModuleType;Ljava/util/Optional;)V
accessible method net/minecraft/entity/ai/brain/Brain$MemoryEntry apply (Lnet/minecraft/entity/ai/brain/Brain;)V
accessible method net/minecraft/entity/ai/brain/Brain tickMemories ()V
extendable method net/minecraft/entity/ai/brain/Brain tickMemories ()V
accessible field net/minecraft/entity/ai/brain/Brain coreActivities Ljava/util/Set;
accessible method net/minecraft/entity/ai/brain/Brain setCoreActivities (Ljava/util/Set;)V
extendable method net/minecraft/entity/ai/brain/Brain canDoActivity (Lnet/minecraft/entity/ai/brain/Activity;)Z
extendable method net/minecraft/entity/ai/brain/Brain resetPossibleActivities (Lnet/minecraft/entity/ai/brain/Activity;)V

# Behaviour
accessible method net/minecraft/entity/ai/brain/task/MultiTickTask tryStarting (Lnet/minecraft/server/world/ServerWorld;Lnet/minecraft/entity/LivingEntity;J)Z
extendable method net/minecraft/entity/ai/brain/task/MultiTickTask tryStarting (Lnet/minecraft/server/world/ServerWorld;Lnet/minecraft/entity/LivingEntity;J)Z
accessible field net/minecraft/entity/ai/brain/task/MultiTickTask endTime J
accessible field net/minecraft/entity/ai/brain/task/MultiTickTask status Lnet/minecraft/entity/ai/brain/task/MultiTickTask$Status;
accessible method net/minecraft/entity/ai/brain/task/MultiTickTask getStatus ()Lnet/minecraft/entity/ai/brain/task/MultiTickTask$Status;
accessible method net/minecraft/entity/ai/brain/task/MultiTickTask hasRequiredMemoryState (Lnet/minecraft/entity/LivingEntity;)Z
extendable method net/minecraft/entity/ai/brain/task/MultiTickTask hasRequiredMemoryState (Lnet/minecraft/entity/LivingEntity;)Z
accessible field net/minecraft/entity/ai/brain/task/CompositeTask tasks Lnet/minecraft/util/collection/WeightedList;

# Sensor
accessible method net/minecraft/entity/ai/brain/sensor/Sensor tick (Lnet/minecraft/server/world/ServerWorld;Lnet/minecraft/entity/LivingEntity;)V
extendable method net/minecraft/entity/ai/brain/sensor/Sensor tick (Lnet/minecraft/server/world/ServerWorld;Lnet/minecraft/entity/LivingEntity;)V
accessible field net/minecraft/entity/ai/brain/sensor/Sensor senseInterval I
accessible field net/minecraft/entity/ai/brain/sensor/Sensor RANDOM Lnet/minecraft/util/math/random/Random;

# World
accessible method net/minecraft/world/World getEntityLookup ()Lnet/minecraft/world/entity/EntityLookup;
accessible method net/minecraft/client/world/ClientWorld getEntityLookup ()Lnet/minecraft/world/entity/EntityLookup;
accessible field net/minecraft/world/entity/SimpleEntityLookup cache Lnet/minecraft/world/entity/SectionedEntityCache;
accessible field net/minecraft/world/entity/SectionedEntityCache trackedPositions Lit/unimi/dsi/fastutil/longs/LongSortedSet;
accessible field net/minecraft/world/entity/EntityTrackingSection collection Lnet/minecraft/util/collection/TypeFilterableList;

# Entities
accessible method net/minecraft/entity/Entity setFlag (IZ)V

# Schedule
accessible field net/minecraft/entity/ai/brain/Schedule scheduleRules Ljava/util/Map;

# Navigation
accessible field net/minecraft/entity/ai/pathing/Path nodes Ljava/util/List;
extendable method net/minecraft/entity/ai/pathing/MobNavigation getPathfindingY ()I
accessible field net/minecraft/entity/ai/pathing/SwimNavigation canJumpOutOfWater Z

# Other
accessible field net/minecraft/entity/ai/brain/LivingTargetCache entities Ljava/util/List;
mutable field net/minecraft/entity/ai/brain/LivingTargetCache entities Ljava/util/List;
accessible field net/minecraft/entity/ai/brain/LivingTargetCache targetPredicate Ljava/util/function/Predicate;
mutable field net/minecraft/entity/ai/brain/LivingTargetCache targetPredicate Ljava/util/function/Predicate;
accessible method net/minecraft/entity/ai/brain/LivingTargetCache <init> ()V